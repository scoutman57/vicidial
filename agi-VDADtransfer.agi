#!/usr/bin/perl
#
# agi-VDADtransfer.agi version 0.2
# 
# runs when a call comes in from the VICIDIAL_auto_dialer. This script will 
# send the calls out to the reps that are logged in.
# 
# if there are no available agents, then it will check every second until an agent becomes available,
# if at the end of 20 seconds it has not found an agent it will hangup the call and mark it as dropped
#
# You need to put lines similar to those below in your extensions.conf file:
# 
# ;VICIDIAL_auto_dialer transfer script:
# exten => 8365,1,AGI(call_log.agi,${EXTEN})
# exten => 8365,2,AGI(agi-VDADtransfer.agi,${EXTEN})
# 
# 
# Written by: Matt Florell <mattf@vicimarketing.com>
#
# Distributed with no waranty under the GNU Public License
#

$V = 1;		# set to 1 for verbose mode
$M = 1;		# set to 1 for 2 line messages mode

$DROP_TIME = 20;	### number of seconds to wait until you drop a waiting call

### Make sure this file is in a path or put the absolute path to it
require("/home/cron/AST_SERVER_conf.pl");	# local configuration file

use Net::MySQL;
use Time::HiRes ('gettimeofday','usleep','sleep');  # necessary to have perl sleep command of less than one second
use Asterisk::AGI;
$AGI = new Asterisk::AGI;



($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = localtime(time);
$year = ($year + 1900);
$mon++;
if ($mon < 10) {$mon = "0$mon";}
if ($mday < 10) {$mday = "0$mday";}
if ($hour < 10) {$Fhour = "0$hour";}
if ($min < 10) {$min = "0$min";}
if ($sec < 10) {$sec = "0$sec";}

$now_date_epoch = time();
$now_date = "$year-$mon-$mday $hour:$min:$sec";
$start_time=$now_date;
	$CIDdate = "$mon$mday$hour$min$sec";
	$tsSQLdate = "$year$mon$mday$hour$min$sec";
	$SQLdate = "$year-$mon-$mday $hour:$min:$sec";

$BDtarget = ($secX - 5);
($Bsec,$Bmin,$Bhour,$Bmday,$Bmon,$Byear,$Bwday,$Byday,$Bisdst) = localtime($BDtarget);
$Byear = ($Byear + 1900);
$Bmon++;
if ($Bmon < 10) {$Bmon = "0$Bmon";}
if ($Bmday < 10) {$Bmday = "0$Bmday";}
if ($Bhour < 10) {$Bhour = "0$Bhour";}
if ($Bmin < 10) {$Bmin = "0$Bmin";}
if ($Bsec < 10) {$Bsec = "0$Bsec";}
	$BDtsSQLdate = "$Byear$Bmon$Bmday$Bhour$Bmin$Bsec";



### begin parsing run-time options ###
if (length($ARGV[0])>1)
{
if ($V) {print STDERR "Perl Environment Dump:\n";}
	$i=0;
	while ($#ARGV >= $i)
	{
	$args = "$args $ARGV[$i]";
	if ($V) {print STDERR "$i|$ARGV[$i]|\n";}
	$i++;
	}

	if ($args =~ /--help/i)
	{
	print "allowed run time options:\n  [-q] = quiet\n  [-t] = test\n  [-debug] = verbose debug messages\n\n";
	}
	else
	{
		if ($args =~ /-V/i)
		{
		$V=1;
		}
		if ($args =~ /-debug/i)
		{
		$DG=1;
		}
		if ($args =~ /-dbAVS/i)
		{
		$DGA=1;
		}
		if ($args =~ /-q/i)
		{
		$q=1;
		$Q=1;
		}
		if ($args =~ /-t/i)
		{
		$TEST=1;
		$T=1;
		}
	}
}
else
{
if ($V) {print "no command line options set\n";}
}

$|=1;
while(<STDIN>) {
	chomp;
	last unless length($_);
	if ($V)
	{
		if (/^agi_(\w+)\:\s+(.*)$/)
		{
			$AGI{$1} = $2;
		}
	}

	if (/^agi_uniqueid\:\s+(.*)$/)		{$unique_id = $1; $uniqueid = $unique_id;}
	if (/^agi_channel\:\s+(.*)$/)		{$channel = $1;}
	if (/^agi_extension\:\s+(.*)$/)		{$extension = $1;}
	if (/^agi_type\:\s+(.*)$/)		{$type = $1;}
	if (/^agi_callerid\:\s+(.*)$/)		{$callerid = $1;}
	if (/^agi_calleridname\:\s+(.*)$/)	{$calleridname = $1;}
	if ( (!$callerid) or ($callerid =~ /unknown/) )
		{$callerid = $calleridname;}

	### allow for ANI being sent with the DNIS "*3125551212*9999*"
	if ($extension =~ /^\*\d\d\d\d\d\d\d\d\d\d\*/)
		{
		$callerid = $extension;
		$callerid =~ s/\*\d\d\d\d\*$//gi;
		$callerid =~ s/^\*//gi;
		$extension =~ s/^\*\d\d\d\d\d\d\d\d\d\d\*//gi;
		$extension =~ s/\*$//gi;
		}
}

	if ($V)
	{

		if ($V) {print STDERR "AGI Environment Dump:\n";}
		foreach $i (sort keys %AGI) {
			if ($V) {print STDERR " -- $i = $AGI{$i}\n";}
		}
	}

$VDADcampaign='';
$VDADphone='';
$VDADphone_code='';

if ($V) {print STDERR "AGI Environment Dump: |$unique_id|$channel|$extension|$type|$callerid|\n";}


$CIDlead_id = $callerid;
$CIDlead_id = substr($CIDlead_id, 11, 9);
$CIDlead_id = ($CIDlead_id + 0);

if ($V) {print STDERR "\nCALL RECEIVED IN FROM VDAD: $callerid  $channel\n";}
if ($M) {print STDERR "+++++ VDAD START : |$unique_id|$channel|$extension|$type|$callerid|$CIDlead_id|$now_date\n";}

if ($channel =~ /Local/i)
{
if ($M) {print STDERR "+++++ VDAD START LOCAL CHANNEL: EXITING\n";}
exit;
}


  my $dbhA = Net::MySQL->new(hostname=>"$DB_server", database=>"$DB_database", user=>"$DB_user", password=>"$DB_pass")  or 	die "Couldn't connect to database: \n";

$stmtA = "UPDATE vicidial_auto_calls set uniqueid='$unique_id', channel='$channel',status='LIVE' where callerid='$callerid' order by call_time desc limit 1;";
$dbhA->query("$stmtA");
my $affected_rows = $dbhA->get_affected_rows_length;
if ($M) {print STDERR "--    VDAD : |$affected_rows|update of vac table: $callerid\n|$stmtA|\n";}
if ($affected_rows > 0)
	{
	$stmtA = "SELECT campaign_id,phone_number,phone_code,lead_id FROM vicidial_auto_calls where callerid='$callerid' order by call_time desc limit 1;";
	$dbhA->query("$stmtA");
	if ($dbhA->has_selected_record)
		{
		$iter=$dbhA->create_record_iterator;
		 $rec_countCUSTDATA=0;
		   while ( $record = $iter->each)
			{
			$VDADcampaign	= "$record->[0]";
			$VDADphone	= "$record->[1]";
			$VDADphone_code	= "$record->[2]";
			$VDADlead_id	= "$record->[3]";
			} 
		}


	$stmtA = "INSERT INTO vicidial_log (uniqueid,lead_id,campaign_id,call_date,start_epoch,status,phone_code,phone_number,user,processed) values('$uniqueid','$CIDlead_id','$VDADcampaign','$SQLdate','$now_date_epoch','QUEUE','$VDADphone_code','$VDADphone','VDAD','N')";
		if($M){print STDERR "\n|$stmtA|\n";}
	$dbhA->query($stmtA);

	if ($M) {print STDERR "--    VDAD : |$VDADlead_id|$CIDlead_id|insert to vicidial_log: $uniqueid\n";}

	}

$drop_timer=0;

while ($drop_timer <= $DROP_TIME)
{
	$stmtA = "SELECT next_agent_call FROM vicidial_campaigns where campaign_id='$VDADcampaign';";
	$dbhA->query("$stmtA");
	if ($dbhA->has_selected_record)
		{
		$iter=$dbhA->create_record_iterator;
		 $rec_countCUSTDATA=0;
		   while ( $record = $iter->each)
			{
			$CAMP_callorder	= "$record->[0]";
			} 
		}

	$agent_call_order='';
	if ($CAMP_callorder =~ /oldest_call_start/i) {$agent_call_order = 'order by last_call_time';}
	if ($CAMP_callorder =~ /oldest_call_finish/i) {$agent_call_order = 'order by last_call_finish';}
	if ($CAMP_callorder =~ /random/i) {$agent_call_order = 'order by random_id';}
	
	$stmtA = "UPDATE vicidial_live_agents set status='QUEUE',lead_id='$CIDlead_id',uniqueid='$unique_id', channel='$channel', callerid='$callerid' where status = 'READY' and server_ip='$server_ip' and campaign_id='$VDADcampaign' and last_update_time > '$BDtsSQLdate' $agent_call_order limit 1;";
	$dbhA->query("$stmtA");
	my $affected_rows = $dbhA->get_affected_rows_length;
	if ($M) {print STDERR "--    VDAD get agent: |$affected_rows|update of vla table: $VDADcampaign|$server_ip\n|$stmtA|\n";}
	if ($affected_rows > 0)
		{
		$stmtA = "SELECT conf_exten,user,extension FROM vicidial_live_agents where status = 'QUEUE' and server_ip='$server_ip' and campaign_id='$VDADcampaign' and callerid='$callerid' and channel='$channel' order by last_call_time limit 1;";
		if($M){print STDERR "\n\n|$stmtA|\n";}
		$dbhA->query("$stmtA");
		if ($dbhA->has_selected_record)
			{
			$iter=$dbhA->create_record_iterator;
			 $rec_countCUSTDATA=0;
			   while ( $record = $iter->each)
				{
				$VDADconf_exten	= "$record->[0]";
				$VDADuser	= "$record->[1]";
				$VDADextension	= "$record->[2]";
				} 
			}

		$stmtA = "UPDATE vicidial_auto_calls set status='XFER' where callerid='$callerid';";
		$dbhA->query("$stmtA");
		my $affected_rows = $dbhA->get_affected_rows_length;
		if ($M) {print STDERR "--    VDAD XFER : |$affected_rows|update of vac table: $callerid\n|$stmtA|\n";}

		$dbhA->close;

		print STDERR "\nexiting the VDAD app, transferring call to $VDADconf_exten\n";
		print "SET CONTEXT $ext_context\n";
			checkresult($result);
		print "SET EXTENSION $VDADconf_exten\n";
			checkresult($result);
		print "SET PRIORITY 1\n";
			checkresult($result);

			($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = localtime(time);
			$year = ($year + 1900);
			$mon++;
			if ($mon < 10) {$mon = "0$mon";}
			if ($mday < 10) {$mday = "0$mday";}
			if ($hour < 10) {$Fhour = "0$hour";}
			if ($min < 10) {$min = "0$min";}
			if ($sec < 10) {$sec = "0$sec";}

			$now_date_epoch = time();
			$now_date = "$year-$mon-$mday $hour:$min:$sec";
		print STDERR "\nXXXXXXXXXX VDAD transferred: start|stop      $start_time|$now_date\n";
		
		exit;
		}

	### sleep for 99 hundredths of a second
	usleep(1*990*1000);

$drop_timer++;
}


if ($drop_timer >= $DROP_TIME)
{
($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = localtime(time);
$year = ($year + 1900);
$mon++;
if ($mon < 10) {$mon = "0$mon";}
if ($mday < 10) {$mday = "0$mday";}
if ($hour < 10) {$Fhour = "0$hour";}
if ($min < 10) {$min = "0$min";}
if ($sec < 10) {$sec = "0$sec";}

$now_date_epoch = time();
$now_date = "$year-$mon-$mday $hour:$min:$sec";
	$CIDdate = "$mon$mday$hour$min$sec";
	$tsSQLdate = "$year$mon$mday$hour$min$sec";
	$SQLdate = "$year-$mon-$mday $hour:$min:$sec";

	### use manager middleware-app to connect the next call to the meetme room
	$VHqueryCID = "VH$CIDdate$VDADconf_exten";

	### insert a NEW record to the vicidial_manager table to be processed
	$stmtA = "INSERT INTO vicidial_manager values('','','$SQLdate','NEW','N','$server_ip','','Hangup','$VHqueryCID','Channel: $channel','','','','','','','','','')";
	$dbhA->query($stmtA)  or die  "Couldn't execute query:\n";
		if ($M) {print STDERR "--    VDAD call_hungup timout: |$VHqueryCID|$VDADconf_exten|$channel|insert to vicidial_manager\n";}

	$stmtA = "DELETE FROM vicidial_auto_calls where callerid='$callerid' order by call_time desc limit 1;";
	$dbhA->query("$stmtA");
	my $affected_rows = $dbhA->get_affected_rows_length;
	if ($M) {print STDERR "--    VDAD vac record deleted: |$affected_rows| $VDADcampaign|$server_ip\n";}

	$stmtA = "UPDATE vicidial_log set status='DROP',end_epoch='$now_date_epoch',length_in_sec='60' where uniqueid = '$uniqueid';";
		if($M){print STDERR "\n\n|$stmtA|\n";}
	$dbhA->query("$stmtA");
	my $affected_rows = $dbhA->get_affected_rows_length;
	if ($M) {print STDERR "--    VDAD vicidial_log update: |$affected_rows|$uniqueid\n";}

	$stmtA = "UPDATE vicidial_list set status='DROP' where lead_id = '$CIDlead_id';";
		if($M){print STDERR "\n\n|$stmtA|\n";}
	$dbhA->query("$stmtA");
	my $affected_rows = $dbhA->get_affected_rows_length;
	if ($M) {print STDERR "--    VDAD vicidial_list update: |$affected_rows|$CIDlead_id\n";}

}



  $dbhA->close;



exit;

sub checkresult {
	my ($res) = @_;
	my $retval;
	$tests++;
	chomp $res;
	if ($res =~ /^200/) {
		$res =~ /result=(-?\d+)/;
		if (!length($1)) {
		#	print STDERR "FAIL ($res)\n";
			$fail++;
		} else {
		#	print STDERR "PASS ($1)\n";
			$pass++;
		}
	} else {
	#	print STDERR "FAIL (unexpected result '$res')\n";
		$fail++;
	}
}
