### Create the following tables in your "asterisk" MySQL database

### remember to prepopulate the conferencing table with meetme conferences defined
### remember to prepopulate the phones table with proper values
### remember to prepopulate the server_updater table with the asterisk servers' IP addresses

 CREATE TABLE phones (
extension VARCHAR(20),		# SIP extension without "SIP/" SIP/cc101 would be "cc101"
dialplan_number INT(10),	# extensions.conf number to get to the phone i.e. "101"
voicemail_id VARCHAR(10),	# voicemail.conf number (not required)
phone_ip VARCHAR(15),		# IP address of phone (not required)
computer_ip VARCHAR(15),	# IP address of client computer (not required)
server_ip VARCHAR(15),		# IP address of asterisk server
login VARCHAR(15),		# phone login (not required)
pass VARCHAR(10),		# phone password (not required)
status VARCHAR(10),		# IP address of client computer (not required)
active ENUM('Y','N'),		# whether the phone is active (not required)
phone_type VARCHAR(50),		# type of phone (not required)
fullname VARCHAR(50),		# full name of phone owner (not required)
company VARCHAR(10),		# company that phone belongs to (not required)
picture VARCHAR(19),		# picture of phone user (not required)
messages INT(4),		# number of new messages, leave blank
old_messages INT(4)		# number of old messages, leave blank
);

 CREATE TABLE servers (
server_id VARCHAR(10) NOT NULL,
server_description VARCHAR(255),
server_ip VARCHAR(15) NOT NULL,
active ENUM('Y','N')
);

 CREATE TABLE live_channels (
channel VARCHAR(10) NOT NULL,
server_ip VARCHAR(15) NOT NULL,
channel_group VARCHAR(30),
extension VARCHAR(20)
);

 CREATE TABLE live_sip_channels (
channel VARCHAR(30) NOT NULL,
server_ip VARCHAR(15) NOT NULL,
channel_group VARCHAR(30),
extension VARCHAR(40)
);

 CREATE TABLE parked_channels (
channel VARCHAR(10) NOT NULL,
server_ip VARCHAR(15) NOT NULL,
channel_group VARCHAR(30),
extension VARCHAR(20),
parked_by VARCHAR(20),
parked_time DATETIME
);

 CREATE TABLE conferences (
conf_exten INT(7) UNSIGNED NOT NULL,
server_ip VARCHAR(15) NOT NULL,
extension VARCHAR(20)
);

 CREATE TABLE recording_log (
recording_id INT(10) UNSIGNED AUTO_INCREMENT PRIMARY KEY UNIQUE NOT NULL,
channel VARCHAR(20),
server_ip VARCHAR(15),
extension VARCHAR(20),
start_time DATETIME,
start_epoch INT(10),
end_time DATETIME,
end_epoch INT(10),
length_in_sec INT(10),
length_in_min DOUBLE(8,2),
filename VARCHAR(50),
location VARCHAR(255)
);


### this is the table for the callerID popup
 CREATE TABLE live_inbound (
uniqueid DOUBLE(18,7) NOT NULL,
channel VARCHAR(30) NOT NULL,
server_ip VARCHAR(15) NOT NULL,
caller_id VARCHAR(30),
extension VARCHAR(40),
phone_ext VARCHAR(40),
start_time DATETIME,
acknowledged ENUM('Y','N') default 'N',
inbound_number VARCHAR(20),
comment_a VARCHAR(50),
comment_b VARCHAR(50),
comment_c VARCHAR(50),
comment_d VARCHAR(50),
comment_e VARCHAR(50)
);


### remember to populate this table with all of the Asterisk servers you are using ###
### insert into server_updater values('10.0.0.2',''); ###
 CREATE TABLE server_updater (
server_ip VARCHAR(15) NOT NULL,
last_update DATETIME
);

### this table is optional and only used if you are using the call_log.agi call logging script ###
 CREATE TABLE call_log (
uniqueid DOUBLE(18,7) PRIMARY KEY UNIQUE NOT NULL,
channel VARCHAR(20),
channel_group VARCHAR(30),
type VARCHAR(10),
server_ip VARCHAR(15),
extension VARCHAR(20),
number_dialed VARCHAR(15),
caller_code VARCHAR(20),
start_time DATETIME,
start_epoch INT(10),
end_time DATETIME,
end_epoch INT(10),
length_in_sec INT(10),
length_in_min DOUBLE(8,2)
);

### this table is optional and only used if you are using the Asterisk Central Queue System ###
 CREATE TABLE vicidial_manager (
man_id INT(9) UNSIGNED AUTO_INCREMENT PRIMARY KEY UNIQUE NOT NULL,
uniqueid DOUBLE(18,7),
entry_date DATETIME,
status  ENUM('NEW','QUEUE','SENT','UPDATED','DEAD'),
response  ENUM('Y','N'),
server_ip VARCHAR(15) NOT NULL,
channel VARCHAR(30),
action VARCHAR(20),
callerid VARCHAR(20),
cmd_line_b VARCHAR(50),
cmd_line_c VARCHAR(50),
cmd_line_d VARCHAR(50),
cmd_line_e VARCHAR(50),
cmd_line_f VARCHAR(50),
cmd_line_g VARCHAR(50),
cmd_line_h VARCHAR(50),
cmd_line_i VARCHAR(50),
cmd_line_j VARCHAR(50),
cmd_line_k VARCHAR(50),
index (callerid),
index (uniqueid)
);
